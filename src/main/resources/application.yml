server:
  port: 8080

google:
  drive:
    credentials:
      path: ${GOOGLE_CREDENTIALS_PATH}
    folder-id: ${GOOGLE_DRIVE_FOLDER_ID}


spring:
  transaction:
    default-timeout: 30s
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  config:
    import: optional:file:.env[.properties]
  profiles:
    active: ${ENV}

  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    driver-class-name: org.postgresql.Driver
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    hikari:
      maximum-pool-size: 50
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 300000
      max-lifetime: 1200000
      validation-timeout: 5000
      keepalive-time: 60000
      auto-commit: true # Thay đổi thành true
      pool-name: HikariPool
      max-prepared-statements-per-connection: 250
      prepared-statement-cache-size: 250



  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6380}
      timeout: ${REDIS_TIMEOUT:60000}

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5673}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_ID}
            client-secret: ${GOOGLE_PASSWORD}
            scope:
              - profile
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            authorization-grant-type: authorization_code
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${EMAIL}
    password: ${APP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: ${MAIL_SMTP_AUTH}
          starttls:
            enable: ${MAIL_SMTP_STARTTLS_ENABLE}

  spring:
    jpa:
      hibernate:
        ddl-auto: update
      properties:
        hibernate:
          jdbc:
            batch_size: 30
          generate_statistics: false
          order_updates: true
          order_inserts: true
          connection_handling: DELAYED_ACQUISITION_AND_RELEASE_AFTER_STATEMENT
          current_session_context_class: thread
          connection:
            provider_disables_autocommit: false
          dialect: org.hibernate.dialect.PostgreSQLDialect
      open-in-view: false

    rabbitmq:
      listener:
        simple:
          retry:
            enabled: true
            initial-interval: 2000
            max-attempts: 3
            max-interval: 10000
            multiplier: 2
          prefetch: 1

jwt:
  signerKey: ${SIGNER_KEY}
  valid-duration: 360000
  refreshable-duration: 3600000




