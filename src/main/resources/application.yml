server:
  port: 8080

spring:
  config:
    import: optional:file:.env[.properties]
  datasource:
    url: jdbc:postgresql://localhost:5440/dadn
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: 123456
    hikari:
      maximum-pool-size: 90
      minimum-idle: 50
      connection-timeout: 30000
      idle-timeout: 600000
      pool-name: HikariConnPool
      max-lifetime: 1800000

  data:
    redis:
      host: localhost
      port: ${REDIS_LOCAL_PORT}

  rabbitmq:
    host: localhost
    port: ${RABBITMQ_LOCAL_PORT}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_ID}
            client-secret: ${GOOGLE_PASSWORD}
            scope:
              - profile
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            authorization-grant-type: authorization_code
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo


  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${EMAIL}
    password: ${APP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true



  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        integration.blazebit.enabled: true

jwt:
  signerKey: ${SIGNER_KEY}
  valid-duration: 3600 # seconds
  refreshable-duration: 3600000
